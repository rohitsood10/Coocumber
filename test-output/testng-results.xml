<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" total="7" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="234671" started-at="2019-02-18T03:46:03Z" finished-at="2019-02-18T03:49:57Z">
    <groups>
      <group name="functest">
        <method signature="SanityTest.Sanitytest1(java.lang.String)[pri:1, instance:TestNG_Test.SanityTest@60285225]" name="Sanitytest1" class="TestNG_Test.SanityTest"/>
        <method signature="SanityTest.Sanitytest3()[pri:1, instance:TestNG_Test.SanityTest@60285225]" name="Sanitytest3" class="TestNG_Test.SanityTest"/>
        <method signature="SmokeTest.SmokeTest1()[pri:1, instance:TestNG_Test.SmokeTest@29b5cd00]" name="SmokeTest1" class="TestNG_Test.SmokeTest"/>
        <method signature="SmokeTest.Smoketest2()[pri:-2, instance:TestNG_Test.SmokeTest@29b5cd00]" name="Smoketest2" class="TestNG_Test.SmokeTest"/>
        <method signature="SmokeTest.Smoketest3()[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00]" name="Smoketest3" class="TestNG_Test.SmokeTest"/>
      </group> <!-- functest -->
    </groups>
    <test name="Regression2" duration-ms="234671" started-at="2019-02-18T03:46:03Z" finished-at="2019-02-18T03:49:57Z">
      <class name="TestNG_Test.SmokeTest">
        <test-method status="PASS" signature="setupsuite()[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00]" name="setupsuite" is-config="true" duration-ms="353" started-at="2019-02-18T03:46:02Z" finished-at="2019-02-18T03:46:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupsuite -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00]" name="beforemethod" is-config="true" duration-ms="17155" started-at="2019-02-18T03:46:03Z" finished-at="2019-02-18T03:46:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestNG_Test.SmokeTest.Smoketest2() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="Smoketest2()[pri:-2, instance:TestNG_Test.SmokeTest@29b5cd00]" name="Smoketest2" duration-ms="8029" started-at="2019-02-18T03:46:20Z" finished-at="2019-02-18T03:46:28Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at TestNG_Test.SmokeTest.Smoketest2(SmokeTest.java:62)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Smoketest2 -->
        <test-method status="PASS" signature="teardown(org.testng.ITestResult)[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00]" name="teardown" is-config="true" duration-ms="3681" started-at="2019-02-18T03:46:28Z" finished-at="2019-02-18T03:46:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Smoketest2 status=FAILURE method=SmokeTest.Smoketest2()[pri:-2, instance:TestNG_Test.SmokeTest@29b5cd00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00]" name="beforemethod" is-config="true" duration-ms="16031" started-at="2019-02-18T03:46:32Z" finished-at="2019-02-18T03:46:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestNG_Test.SmokeTest.Smoketest3() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Smoketest3()[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00]" name="Smoketest3" duration-ms="30622" started-at="2019-02-18T03:46:48Z" finished-at="2019-02-18T03:47:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Smoketest3 -->
        <test-method status="PASS" signature="teardown(org.testng.ITestResult)[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00]" name="teardown" is-config="true" duration-ms="3375" started-at="2019-02-18T03:47:18Z" finished-at="2019-02-18T03:47:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Smoketest3 status=SUCCESS method=SmokeTest.Smoketest3()[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00]" name="beforemethod" is-config="true" duration-ms="15194" started-at="2019-02-18T03:47:22Z" finished-at="2019-02-18T03:47:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestNG_Test.SmokeTest.SmokeTest1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="SmokeTest1()[pri:1, instance:TestNG_Test.SmokeTest@29b5cd00]" name="SmokeTest1" duration-ms="32518" started-at="2019-02-18T03:47:37Z" finished-at="2019-02-18T03:48:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SmokeTest1 -->
        <test-method status="PASS" signature="teardown(org.testng.ITestResult)[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00]" name="teardown" is-config="true" duration-ms="3090" started-at="2019-02-18T03:48:09Z" finished-at="2019-02-18T03:48:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SmokeTest1 status=SUCCESS method=SmokeTest.SmokeTest1()[pri:1, instance:TestNG_Test.SmokeTest@29b5cd00] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="teardownsuite()[pri:0, instance:TestNG_Test.SmokeTest@29b5cd00]" name="teardownsuite" is-config="true" duration-ms="482" started-at="2019-02-18T03:49:57Z" finished-at="2019-02-18T03:49:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownsuite -->
      </class> <!-- TestNG_Test.SmokeTest -->
      <class name="TestNG_Test.SanityTest">
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestNG_Test.SanityTest@60285225]" name="beforemethod" is-config="true" duration-ms="18952" started-at="2019-02-18T03:48:12Z" finished-at="2019-02-18T03:48:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestNG_Test.SanityTest.Sanitytest1(java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Sanitytest1(java.lang.String)[pri:1, instance:TestNG_Test.SanityTest@60285225]" name="Sanitytest1" duration-ms="28609" started-at="2019-02-18T03:48:31Z" finished-at="2019-02-18T03:49:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7694250]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Sanitytest1 -->
        <test-method status="PASS" signature="teardown(org.testng.ITestResult)[pri:0, instance:TestNG_Test.SanityTest@60285225]" name="teardown" is-config="true" duration-ms="3194" started-at="2019-02-18T03:49:00Z" finished-at="2019-02-18T03:49:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Sanitytest1 status=SUCCESS method=SanityTest.Sanitytest1(java.lang.String)[pri:1, instance:TestNG_Test.SanityTest@60285225] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:TestNG_Test.SanityTest@60285225]" name="beforemethod" is-config="true" duration-ms="17965" started-at="2019-02-18T03:49:03Z" finished-at="2019-02-18T03:49:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestNG_Test.SanityTest.Sanitytest3() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Sanitytest3()[pri:1, instance:TestNG_Test.SanityTest@60285225]" name="Sanitytest3" duration-ms="33007" started-at="2019-02-18T03:49:21Z" finished-at="2019-02-18T03:49:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Sanitytest3 -->
        <test-method status="PASS" signature="teardown(org.testng.ITestResult)[pri:0, instance:TestNG_Test.SanityTest@60285225]" name="teardown" is-config="true" duration-ms="3201" started-at="2019-02-18T03:49:54Z" finished-at="2019-02-18T03:49:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Sanitytest3 status=SUCCESS method=SanityTest.Sanitytest3()[pri:1, instance:TestNG_Test.SanityTest@60285225] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- TestNG_Test.SanityTest -->
    </test> <!-- Regression2 -->
  </suite> <!-- Suite1 -->
</testng-results>
